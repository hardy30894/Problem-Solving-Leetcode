class Solution {
public:
    int search(vector<int>& nums, int cur, int end, int target){
        if(nums.size()==0) return 0;
        int mid = cur+(end-cur+1)/2;
        if(nums[mid] == target){
            return mid;
        }
        else if(nums[mid]>target){
            if(mid >cur && nums[mid-1] <target){
                return mid;
            }
            else if(nums[cur]>target){
                return cur;
            }
            else{
                return search(nums, cur, mid-1, target);
            }
        }
        else if(nums[mid]<target){
            if(mid<end && nums[mid+1]>target){
                return mid+1;
            }
            else if(nums[end]<target){
                return end+1;
            }
            else{
                return search(nums, mid+1, end, target);
            }
        }
        return -1;
    }
    int searchInsert(vector<int>& nums, int target) {
        return search(nums, 0, nums.size()-1, target);
    }
};